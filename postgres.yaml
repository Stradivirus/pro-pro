---
apiVersion: v1
kind: Namespace
metadata:
  name: 3ifp

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: 3ifp
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi  # 적절한 크기로 조정하세요

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secrets
  namespace: 3ifp
type: Opaque
data:
  postgres-user: bW9vbg==  # 'moon'을 base64로 인코딩한 값
  postgres-password: cGFzc3dvcmQ=  # 'password'를 base64로 인코딩한 값. 실제 사용 시 변경하세요!

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: 3ifp
spec:
  replicas: 3 #갯수
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:16
        env:
        - name: POSTGRES_DB 
          value: moon #여기 db 이름 입력
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef: #시크릿으로 보완 유지
              name: postgres-secrets
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: postgres-password
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
          subPath: postgres
        livenessProbe:
          exec:
            command: ["pg_isready", "-U", "moon"]
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "moon"]
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: 3ifp
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432