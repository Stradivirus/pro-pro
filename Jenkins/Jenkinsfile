pipeline {
    agent any
    
    environment {
        DOCKER_IMAGE = "stradivirus/fast"
        DOCKER_TAG = "${env.BUILD_NUMBER}"
        GIT_REPO = "https://github.com/Stradivirus/proDev.git"
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Build and Test') {
            steps {
                sh 'echo "Running tests..."'
                // 여기에 실제 테스트 명령어 추가 (예: python -m pytest)
                
                sh 'echo "Building Docker image..."'
                script {
                    docker.build("${DOCKER_IMAGE}:${DOCKER_TAG}")
                }
            }
        }
        
        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
                        docker.image("${DOCKER_IMAGE}:${DOCKER_TAG}").push()
                        docker.image("${DOCKER_IMAGE}:${DOCKER_TAG}").push("latest")
                    }
                }
            }
        }
        
        stage('Update Kubernetes Manifests') {
            steps {
                script {
                    sh """
                    sed -i 's|image: ${DOCKER_IMAGE}:.*|image: ${DOCKER_IMAGE}:${DOCKER_TAG}|' fast.yaml
                    git config user.email "jenkins@example.com"
                    git config user.name "Jenkins"
                    git add kubernetes/deployment.yaml
                    git commit -m "Update image to ${DOCKER_IMAGE}:${DOCKER_TAG}"
                    git push origin HEAD:main
                    """
                }
            }
        }
        
        stage('Deploy') {
            steps {
                sh 'echo "Deployment will be handled by ArgoCD"'
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
    }
}